/**
 * Script de Teste - Campanha de Reativa√ß√£o
 * CR√çTICO: Testar sistema antes de disparar para 561 ex-alunos
 * Full Force Academia - Matup√°/MT
 */

import fs from 'fs';
import Database from 'better-sqlite3';

const DB_PATH = './academia_whatsapp.db';

function carregarTemplates() {
  try {
    const templatesContent = fs.readFileSync('./message_templates.json', 'utf-8');
    const templates = JSON.parse(templatesContent);
    return templates.templates;
  } catch (error) {
    console.error('‚ùå Erro ao carregar templates:', error.message);
    return {};
  }
}

function substituirVariaveis(template, dados) {
  let mensagem = template;
  
  // Substituir vari√°veis b√°sicas
  const variaveis = {
    nome: dados.nome,
    nome_academia: 'Full Force Academia',
    telefone_contato: '(66) 99876-5432',
    endereco: 'Rua Principal, 789 - Centro, Matup√°/MT'
  };
  
  for (const [chave, valor] of Object.entries(variaveis)) {
    mensagem = mensagem.replace(new RegExp(`{{${chave}}}`, 'g'), valor);
  }
  
  return mensagem;
}

function simularEnvioWhatsApp(telefone, mensagem, templateId) {
  console.log('üì± SIMULANDO ENVIO WHATSAPP:');
  console.log(`   üìû Para: ${telefone}`);
  console.log(`   üì® Template: ${templateId}`);
  console.log(`   üìÑ Mensagem:`);
  console.log(`\n${mensagem}\n`);
  console.log('   ‚úÖ [SIMULADO] Mensagem enviada com sucesso');
  console.log('   üïê [SIMULADO] Entregue √†s', new Date().toLocaleTimeString());
  console.log('');
}

async function testarCampanhaReativacao() {
  console.log('üöÄ INICIANDO TESTE DE CAMPANHA DE REATIVA√á√ÉO');
  console.log('üìç Full Force Academia - Matup√°/MT');
  console.log('‚ö†Ô∏è  MODO SIMULA√á√ÉO - Nenhuma mensagem real ser√° enviada');
  console.log('');
  
  try {
    // Carregar templates
    console.log('üìã Carregando templates de mensagem...');
    const templates = carregarTemplates();
    
    if (!templates.reativacao_15) {
      throw new Error('Templates de reativa√ß√£o n√£o encontrados');
    }
    
    console.log('‚úÖ Templates carregados:');
    console.log(`   - reativacao_15: ${templates.reativacao_15.titulo}`);
    console.log(`   - reativacao_30: ${templates.reativacao_30.titulo}`);
    console.log(`   - reativacao_60: ${templates.reativacao_60.titulo}`);
    console.log('');
    
    // Conectar ao banco
    console.log('üóÑÔ∏è Conectando ao banco de dados...');
    const db = new Database(DB_PATH, { readonly: true });
    
    // Buscar ex-alunos inativos
    const exAlunos = db.prepare(`
      SELECT nome, telefone, email, status, ultima_visita 
      FROM alunos 
      WHERE status = 'INATIVO'
      LIMIT 3
    `).all();
    
    console.log(`üë• Ex-alunos encontrados: ${exAlunos.length}`);
    
    if (exAlunos.length === 0) {
      console.log('‚ÑπÔ∏è  Nenhum ex-aluno encontrado para teste');
      return;
    }
    
    console.log('');
    console.log('üì® SIMULANDO CAMPANHAS DE REATIVA√á√ÉO:');
    console.log(''.padEnd(50, '='));
    
    // Testar cada template com os ex-alunos
    const tiposReativacao = ['reativacao_15', 'reativacao_30', 'reativacao_60'];
    
    for (const [index, aluno] of exAlunos.entries()) {
      const tipoTemplate = tiposReativacao[index % tiposReativacao.length];
      const template = templates[tipoTemplate];
      
      console.log(`\n[${index + 1}/${exAlunos.length}] TESTE ${tipoTemplate.toUpperCase()}`);
      console.log(`üë§ Aluno: ${aluno.nome}`);
      console.log(`üì± Telefone: ${aluno.telefone}`);
      console.log(`üìß Email: ${aluno.email || 'n√£o informado'}`);
      console.log(`‚è∞ √öltima visita: ${aluno.ultima_visita || 'n√£o registrada'}`);
      console.log('');
      
      // Gerar mensagem personalizada
      const mensagem = substituirVariaveis(template.conteudo, aluno);
      
      // Simular envio
      simularEnvioWhatsApp(aluno.telefone, mensagem, tipoTemplate);
    }
    
    // Estat√≠sticas de campanha
    const totalAlunosInativos = db.prepare('SELECT COUNT(*) as count FROM alunos WHERE status = "INATIVO"').get().count;
    
    console.log('üìä PROJE√á√ÉO DA CAMPANHA REAL:');
    console.log(''.padEnd(50, '='));
    console.log(`   üë• Total de ex-alunos inativos: ${totalAlunosInativos}`);
    console.log(`   üì® Mensagens a serem enviadas: ${totalAlunosInativos * 3} (3 templates)`);
    console.log(`   üéØ Meta de reativa√ß√£o: ${Math.floor(totalAlunosInativos * 0.3)} alunos (30%)`);
    console.log(`   üí∞ Receita esperada: R$ ${(Math.floor(totalAlunosInativos * 0.3) * 150).toLocaleString('pt-BR')}/m√™s`);
    console.log('');
    
    console.log('üéØ PR√ìXIMOS PASSOS:');
    console.log('   1. ‚úÖ Templates testados e funcionando');
    console.log('   2. ‚è≥ Conectar WhatsApp Business real');
    console.log('   3. ‚è≥ Configurar cronograma de envios (15/30/60 dias)');
    console.log('   4. ‚è≥ Ativar campanha autom√°tica');
    console.log('');
    
    console.log('‚ö†Ô∏è  IMPORTANTE:');
    console.log('   - Teste manual com 2-3 n√∫meros primeiro');
    console.log('   - Verifique aprova√ß√£o dos templates WhatsApp');
    console.log('   - Configure hor√°rios de envio (9h-20h)');
    console.log('   - Monitore taxa de resposta');
    
    db.close();
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
    throw error;
  }
}

// Executar teste
testarCampanhaReativacao()
  .then(() => {
    console.log('');
    console.log('‚úÖ TESTE DE CAMPANHA CONCLU√çDO COM SUCESSO!');
    console.log('üöÄ Sistema pronto para ativa√ß√£o da campanha real');
  })
  .catch((error) => {
    console.error('‚ùå FALHA NO TESTE:', error.message);
    process.exit(1);
  });